- Javascript can be used for dynamic interaction for our web page.
- JS it is a scripting language. means suppose you have written 10lines of code and if the error is at 9th line then till line 8 it will get output.
- 3 ways we can print in js.

1. alert()
2. document.write() // our page is treated as object in javascript and we call it as document.
3. innerhtml // <h1>this is innerhtml</h1> the content between the tags.

- Roadmap:
----------
  Basics:
1. js and its features.
2. variables
3. datatypes
4. operators
5. conditional & control statements
6. loops
7. data structures //arrays, maps, sets etc.
8. scopes
9. objects
10. functions
11. form validations
12. DOM manipulation
13. events
14. BOM elements //browser object modal
    advance: 
15. prototyping
16. proto type inheritance
17. call backs
18. IIFE
19. promises
20. Ajax
21. Async await
22. closures
23. OPPs concept
24. JSON

variables
---------
- we cannot define const without initalizing. else it will throw an error  Missing initializer in const declaration.
- using var we can define same variable name n times but cannot with let and const
- let and const have block scope.

data types:
-----------
primitive datatypes means primary data types
primitive datatypes:
- Numbers
- string
- boolean

special:
- undefined
- null

Composite:
- array
- object

- - javascript is a dynamic typed language.

operators:
---------
Arithmetic opeartors
comparison operators
logical operators
assignment operators
type operators
bitwise operators
ternary operators
unary operators (post and pre increment/decrement)

logical operators:
&& operator returns value of the second operand if the first operand evaluates to true
only in case of 0 or empty string '' , it is false 

Bitwise operators:
converts numbers into binary system then performs the operations.

ternary operators:
Three operands --> condition ? expression1 : expression2;

- typecasting or type conversion
- implicit and explicit conversion


types of conditional statements:
1. if statement
2. if-else statement
3. if-else if-else statement
4. switch statement

loops:
to do a task multiple times then we use loops.
loops are also called as iterative statements
1. for loop
2. while loop
3. do-while loop
4. for in loop
5. for of loop

template literals:
- `${}`


for in VS for of loops
-used in iterable data types like strings, arrays, objects in these for every element if we want to iterate over then we use the for..in and for..of loops


arrays:
1. why arrays
2. how to declare arrays
3. how to access arrays elements
4. how to update or add elements to the array
5. methods on arrays


Functions:
what is a function
why functions
how to create functions
how to call functions
what is function expression

types of functions

Scopes in JavaScript
Global scope
Local scope
block level scope

## default and rest parameters

## foreach method

## sets

## objects
- 5 ways we can create objects in javascript
- 1. Object literals
- 2. using a new keyword with object constructor
- 3. using a new keyword with a constructor function
- 4. Object.create() method
- 5. Classes

## console methods

## Dom
- document object model
- by using HTML DOM javascript can access, change or remove any elements of html document and also can create new elements at any position
- document object has properties and methods so by using those we can select/modify/remove/create html elements and we can also add/remove/change styles tp HTML elements.
We have 5 methods to select HTML elements:
1. document.getElementById("idName") --> returns element with the specified id.
2. document.getElementsByClassName('className) --> returns list of all elements belong to the specified class.
3. document.getElementsByTagName("tagName") --> returns list of all elements with the specified tag.
4. document.querySelector(".class/#id/tagName") --> returns the first object matching css style selector.
5. document.querySelectorAll(".class/#id/tagName") --> returns all objects matches the css style selector.

document also has properties few of them are :
1. document.body
2. document.head
3. document.title
4. document.links //anchors
5. document.forms
6. document.images
7. document.scripts