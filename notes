- Javascript can be used for dynamic interaction for our web page.
- JS it is a scripting language. means suppose you have written 10lines of code and if the error is at 9th line then till line 8 it will get output.
- 3 ways we can print in js.

1. alert()
2. document.write() // our page is treated as object in javascript and we call it as document.
3. innerhtml // <h1>this is innerhtml</h1> the content between the tags.

- Roadmap:
----------
  Basics:
1. js and its features.
2. variables
3. datatypes
4. operators
5. conditional & control statements
6. loops
7. data structures //arrays, maps, sets etc.
8. scopes
9. objects
10. functions
11. form validations
12. DOM manipulation
13. events
14. BOM elements //browser object modal
    advance: 
15. prototyping
16. proto type inheritance
17. call backs
18. IIFE
19. promises
20. Ajax
21. Async await
22. closures
23. OPPs concept
24. JSON

variables
---------
- we cannot define const without initalizing. else it will throw an error  Missing initializer in const declaration.
- using var we can define same variable name n times but cannot with let and const
- let and const have block scope.

data types:
-----------
primitive datatypes means primary data types
primitive datatypes:
- Numbers
- string
- boolean

special:
- undefined
- null

Composite:
- array
- object

- - javascript is a dynamic typed language.

operators:
---------
Arithmetic opeartors
comparison operators
logical operators
assignment operators
type operators
bitwise operators
ternary operators
unary operators (post and pre increment/decrement)

logical operators:
&& operator returns value of the second operand if the first operand evaluates to true
only in case of 0 or empty string '' , it is false 

Bitwise operators:
converts numbers into binary system then performs the operations.

ternary operators:
Three operands --> condition ? expression1 : expression2;

- typecasting or type conversion
- implicit and explicit conversion


types of conditional statements:
1. if statement
2. if-else statement
3. if-else if-else statement
4. switch statement

loops:
to do a task multiple times then we use loops.
loops are also called as iterative statements
1. for loop
2. while loop
3. do-while loop
4. for in loop
5. for of loop

template literals:
- `${}`


for in VS for of loops
-used in iterable data types like strings, arrays, objects in these for every element if we want to iterate over then we use the for..in and for..of loops


arrays:
1. why arrays
2. how to declare arrays
3. how to access arrays elements
4. how to update or add elements to the array
5. methods on arrays


Functions:
what is a function
why functions
how to create functions
how to call functions
what is function expression

types of functions

Scopes in JavaScript
Global scope
Local scope
block level scope

## default and rest parameters

## foreach method

## sets

## objects
- 5 ways we can create objects in javascript
- 1. Object literals
- 2. using a new keyword with object constructor
- 3. using a new keyword with a constructor function
- 4. Object.create() method
- 5. Classes

## console methods

## Dom
- document object model
- by using HTML DOM javascript can access, change or remove any elements of html document and also can create new elements at any position
- document object has properties and methods so by using those we can select/modify/remove/create html elements and we can also add/remove/change styles tp HTML elements.
We have 5 methods to select HTML elements:
1. document.getElementById("idName") --> returns element with the specified id.
2. document.getElementsByClassName('className) --> returns list of all elements belong to the specified class.
3. document.getElementsByTagName("tagName") --> returns list of all elements with the specified tag.
4. document.querySelector(".class/#id/tagName") --> returns the first object matching css style selector.
5. document.querySelectorAll(".class/#id/tagName") --> returns all objects matches the css style selector.

document also has properties few of them are :
1. document.body
2. document.head
3. document.title
4. document.links //anchors
5. document.forms
6. document.images
7. document.scripts

DOM manipulation:
1. how to create HTML elements. //only empty tags will get created with out content ex: <h1></h1>
2. how to set content to element. // we need to set content
3. how to append a new element //then we need to append new element in the tree note: append will add the element at the end.
4. how to insert an element before another element //instead of appending at the end to insert it before another element.
5. how to remove an element //to remove an existing element.
6. how to remove child element // to remove element's child
7. how to replace element // to replace an element.

add/change styles in javascript
1. how to change style of element
2. how to get attribute value of an element
3. how to set/change attribute of an element.

## model windows
- model windows means after opening our web page, upon that a window is opened(model window) once it is opened, without closing it we can not further interact without web page.
-js contains mainly 3 model windows.
1. alert() - to show message to the user
2. prompt() - to take some input from the user
3. confirm() - to get confirmation from the user.

## Events
1. what is event and types of events
2. what is event handler
3. ways to handle events.

# Event:
Event is nothing but an action. 
in webpage also what ever user do is everything is an event.

# who generates an events
user -> keypress, scroll, focus, etc...
system -> load, error, abort, etc...

# types of user generated events:
browser specific events ->  scrollup/down, resize browser.
DOM/ web page specific events -> click, focus, hover.

event listeners and event handlers
#event listener is a function that listens for a specific event and triggers another function(the event handler)when the event occurs.
#event handler is a function that handles (or responds to) a specific event when triggered by an event listener. or event handler is a function we write to run when an event happens.
 
types of events:
# mouse events:
click, double click, mouseover, mouseout, mouse move

# keyboard events:
key down, key up, key press

# focus events:
focus, blur, focusin, focusou

# form events:
submit, reset, change


### 3 ways to handle events.
1. inline event handlers(using the event attribute in html)
EX: <button onclick="js code">

# for all the above events if we add on at starting then its called event listeners

2. using event properties in JS.
EX: let btn = document.getElementById("b1)
    btn.onclick = function name/anonymous function

3. using addEventListener() method in JS
EX: let btn = document.getElementById("b1)
    btn.addEventListener(eventName, function/anonymous fun)


## settimeout and settimeinterval() functions

var a = setTimeout(
        function (name) {
          alert("Hellooo! " + name);
          console.log("Hellooo! after timeout");
        },
        5000,
        "zaheer"
      );

a stores the id of the function
and we cancel the function execution without executing after a particular time by using
clearInterval(a)


## map() method:
- it is related to arrays method. 
- it is used for modify already existing array data and create's a new array with modified data we can use map() method.

## filter() method:

## reduce() method:
- it is also used for arrays.
- array.reduce(function, accumulator or default value)
- function can take 4 arguments.
- function(accumulator value, element, index, array)  //accumulator is a first argument.
- array.reduce(function(acc, elem, index, array){}, 8)
- this method returns a single value.
// reduce method will iterate over the array and calls the function for each element and compares with accumulator and so on..


## array methods: 
- find() method
- some() method
- every() method
these are callback functions

## spread operator:


## form validation

## callback functions

## higher Order Functions

## closure

## this keyword
- function is different and method is different that is if we define a function in an object then that is called as method.


## call,apply,bind methods 

## optional chaining 

## date object

## math object
- sign()
- abs()
- sqrt()
- pow()
- max()
- min()
- round()
- ceil()
- floor()
- trunc()
- random()
- exp()
- log2()
- log10()

## string methods
charAt()
indexOf()
lastIndexOf()
toLowerCase() 
toUpperCase() 
concat()
trim()
split() 
startsWith() 
endsWith()
slice()
substring() 
substr()
includes()
charCodeAt()
repeat() 
replace()

##  wuindow object
- document
- innerWidth
- outerWidth
- innerHeight
- outerHeight
- location
- closed
- name
- navigator

## window.open()  and window.close() methods

## moveTo() and moveBy() and reSizeTo() and reSizeBy() methods